{
  "name": "puckswap-dex",
  "version": "1.0.0",
  "description": "PuckSwap - A Cardano DEX with retro terminal aesthetic",
  "main": "index.js",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "production-check": "npm run type-check && npm run lint && npm run verify-builders",
    "verify-builders": "tsx scripts/verify-transaction-builders.ts",
    "build-contracts": "aiken build",
    "test-contracts": "aiken check",
    "build-v4": "aiken build --target v4-enterprise",
    "test-v4": "aiken check --target v4-enterprise",
    "deploy-v4": "node scripts/deploy-v4-contracts.js",
    "test-env": "node scripts/test-environment-config.js",
    "test-env-preprod": "NETWORK=preprod node scripts/test-environment-config.js",
    "test-env-mainnet": "NETWORK=mainnet node scripts/test-environment-config.js",
    "test-env-local": "node scripts/test-env.js",
    "monitor-governance": "node scripts/monitor-governance.js",
    "test-simulation": "NETWORK=preprod tsx tests/simulation/run-all-simulations.ts",
    "test-simulation-pool": "NETWORK=preprod tsx tests/simulation/scenarios/pool-lifecycle-simulation.ts",
    "test-simulation-governance": "NETWORK=preprod tsx tests/simulation/scenarios/governance-simulation.ts",
    "test-simulation-staking": "NETWORK=preprod tsx tests/simulation/scenarios/liquid-staking-simulation.ts",
    "test-simulation-crosschain": "NETWORK=preprod tsx tests/simulation/scenarios/crosschain-simulation.ts",
    "test-simulation-monitors": "NETWORK=preprod tsx tests/simulation/scenarios/backend-monitoring-verification.ts",
    "monitor-treasury": "node scripts/monitor-treasury.js",
    "monitor-registry": "node scripts/monitor-registry.js",
    "test-bonding-curve": "node scripts/test-bonding-curve.js",
    "validate-governance": "node scripts/validate-governance.js",
    "backup-state": "node scripts/backup-state.js",
    "restore-state": "node scripts/restore-state.js",
    "test-lucid": "npm run test-wallet && npm run test-transfer && npm run test-mint && npm run test-datum && npm run test-contract",
    "test-wallet": "npx tsx src/lucid/tests/01_wallet_connection_test.ts",
    "test-transfer": "npx tsx src/lucid/tests/02_simple_transfer_test.ts",
    "test-mint": "npx tsx src/lucid/tests/03_multi_asset_mint_test.ts",
    "test-datum": "npx tsx src/lucid/tests/04_cip68_datum_serialization_test.ts",
    "test-contract": "npx tsx src/lucid/tests/05_basic_contract_tx_test.ts",
    "test-all-lucid": "npm run test-lucid",
    "test-fix-phase": "tsx scripts/test-fix-phase.ts",
    "test-context7": "tsx scripts/test-context7-client.ts",
    "test-context7-full": "tsx scripts/test-context7-client.ts --full",
    "build-v5": "aiken build",
    "export-v5": "aiken export --output deployment/scripts",
    "deploy-v5-preprod": "NETWORK=preprod tsx scripts/deployContracts.ts",
    "deploy-v5-mainnet": "NETWORK=mainnet tsx scripts/deployContracts.ts",
    "deploy-v5": "npm run build-v5 && npm run export-v5 && npm run deploy-v5-preprod",
    "test-deployment": "tsx scripts/testDeployment.ts",
    "verify-deployment": "tsx scripts/verifyDeployment.ts",
    "verify-deployment-preprod": "NETWORK=preprod tsx scripts/verifyDeployment.ts",
    "verify-deployment-mainnet": "NETWORK=mainnet tsx scripts/verifyDeployment.ts",
    "example-contracts": "tsx src/examples/useDeployedContracts.ts",
    "test-all": "npm run test-contracts && npm run test-lucid && npm run test-env-preprod && npm run test-simulation && npm run test-fix-phase && npm run test-context7",
    "test:wallet": "tsx src/tests/cardano-connect-wallet-test.ts",
    "test:wallet-integration": "tsx src/tests/wallet-integration-test.ts",
    "wallet:migrate-to-new": "node -e \"console.log('Setting USE_CARDANO_CONNECT_WALLET=true'); process.env.NEXT_PUBLIC_USE_CARDANO_CONNECT_WALLET='true'\"",
    "wallet:migrate-to-legacy": "node -e \"console.log('Setting USE_CARDANO_CONNECT_WALLET=false'); process.env.NEXT_PUBLIC_USE_CARDANO_CONNECT_WALLET='false'\"",
    "wallet:test-migration": "tsx scripts/test-wallet-migration.ts"
  },
  "dependencies": {
    "@aiken-lang/aikup": "^0.0.11",
    "@cardano-foundation/cardano-connect-with-wallet": "^0.2.14",
    "@cardano-foundation/cardano-connect-with-wallet-core": "^0.2.8",
    "@emurgo/cardano-serialization-lib-asmjs": "^14.1.2",
    "@hookform/resolvers": "^3.3.0",
    "@lucid-evolution/lucid": "^0.4.21",
    "@lucid-evolution/wallet": "^0.1.72",
    "@radix-ui/react-accordion": "^1.1.2",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-aspect-ratio": "^1.0.3",
    "@radix-ui/react-avatar": "^1.0.4",
    "@radix-ui/react-checkbox": "^1.0.4",
    "@radix-ui/react-collapsible": "^1.0.3",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-hover-card": "^1.0.7",
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-separator": "^1.0.3",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-toggle": "^1.0.3",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@solana/web3.js": "^1.87.0",
    "@types/crypto-js": "^4.2.1",
    "@types/lodash": "^4.14.200",
    "@types/node": "^20.0.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/react-virtualized": "^9.21.29",
    "@types/react-window": "^1.8.8",
    "@types/ws": "^8.5.8",
    "autoprefixer": "^10.4.0",
    "axios": "^1.6.0",
    "bignumber.js": "^9.1.2",
    "blakejs": "^1.2.1",
    "buffer": "^6.0.3",
    "cbor-web": "^10.0.3",
    "chart.js": "^4.4.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cmdk": "^0.2.0",
    "critters": "^0.0.23",
    "crypto-browserify": "^3.12.0",
    "crypto-js": "^4.2.0",
    "date-fns": "^2.30.0",
    "dotenv": "^16.3.0",
    "embla-carousel-react": "^8.0.0",
    "ethers": "^6.8.0",
    "framer-motion": "^10.16.0",
    "input-otp": "^1.2.4",
    "lodash": "^4.17.21",
    "lucide-react": "^0.263.1",
    "merkletreejs": "^0.3.11",
    "next": "^14.0.0",
    "next-themes": "^0.2.1",
    "postcss": "^8.4.0",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.2.0",
    "react-day-picker": "^8.10.0",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.47.0",
    "react-hot-toast": "^2.4.0",
    "react-intersection-observer": "^9.5.3",
    "react-resizable-panels": "^0.0.55",
    "react-use": "^17.4.0",
    "react-virtualized": "^9.22.5",
    "react-window": "^1.8.8",
    "recharts": "^2.8.0",
    "sonner": "^1.4.0",
    "stream-browserify": "^3.0.0",
    "tailwind-merge": "^1.14.0",
    "tailwindcss": "^3.3.0",
    "tailwindcss-animate": "^1.0.7",
    "typescript": "^5.0.0",
    "use-debounce": "^10.0.0",
    "util": "^0.12.5",
    "vaul": "^0.9.0",
    "web3": "^4.2.0",
    "ws": "^8.14.0",
    "zod": "^3.22.0",
    "zustand": "^4.4.0"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "context7": "^1.0.3",
    "eslint": "^8.0.0",
    "eslint-config-next": "^14.0.0",
    "ignore-loader": "^0.1.2",
    "prettier": "^3.0.0",
    "prettier-plugin-tailwindcss": "^0.5.0",
    "tsx": "^4.20.3"
  },
  "keywords": [
    "cardano",
    "dex",
    "defi",
    "amm",
    "aiken",
    "lucid-evolution",
    "nextjs"
  ],
  "author": "PuckSwap Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/puckswap/puckswap-dex"
  }
}
